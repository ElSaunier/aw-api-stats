openapi: '3.0.2'
info:
  title: Statistiques
  description: API pour la gestion des statistiques utilisateurs pour le projet Asteroids Warrior
  version: '1.0'
servers:
  - url: https://stats.aw.alexandre-vogel.fr/


tags:
  - name: Statistiques
    description: Ensemble des fonctions liées à l'obtention, la modification et l'envoi des statistiques des utilisateurs
  - name: Classement
    description: Ensemble des fonctions liées à l'obtention du classement des utilisateurs

paths:
  /stats:
    get:
      tags :
        - Statistiques
      summary: Récupère les statistiques de tous les utilisateurs
      description: Récupère les statistiques de tous les utilisateurs
      responses: 
        '200':
          description: L'ensemble du classement a été récupéré et est transmis dans le corps du message
          content:
            json:
              schema:
                type: array
                description: Ensemble des statistiques
                items:
                  $ref: '#/components/schemas/userStats'


  /stats/{username}:
    get:
      tags:
        - Statistiques
      summary: Récupère les statistiques d'un utilisateur particulier
      description: Récupère les statistiques d'un utilisateur particulier
      parameters: 
        - name: username
          in: path
          description: Username de l'utilisateur
          required: true
          schema:
            type: string
      responses:
        '200':
          description: L'ensemble des statistiques utilisateur avec l'username spécifié ont été récupérées
          content:
            json:
              schema:
                $ref: '#/components/schemas/userStats'
        '400':
          description: 'Requête invalide : vérifiez la syntaxe'
        '404':
          description: L'utilisateur demandé n'a pas été trouvé

    post:
      tags:
        - Statistiques
      summary: Envoie les statistiques d'un utilisateur particulier
      description: Envoie les statistiques d'un utilisateur particulier
      parameters: 
        - in: header
          name: serverToken
          schema:
            type: string
          required: true
          description: Token pour identifier le serveur
        - name: username
          in: path
          description: username de l'utilisateur concerné
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Les statistiques ont bien été envoyées
        '400':
          description: 'Requête invalide : vérifiez la syntaxe'
        '403':
          description: Vous n'êtes pas autorisé à modifier les statistiques
        '404':
          description: L'utilisateur demandé n'a pas été trouvé


  /ranking:
    get:
      tags:
        - Classement
      summary: Récupère le classement des utilisateurs en fonction de leur nombre de points
      description: Récupère le classement des utilisateurs en fonction de leur nombre de points
      parameters:
        - in: query
          name: offset
          schema:
            type: number
            minimum: 1
          required: false
          description: Rang du premier utilisateur du classement
        - in: query
          name: limit
          schema:
            type: number
            minimum: 1
          required: false
          description: Taille du classement
      responses:
        '200':
          description: Le classement a été récupéré et est transmis dans le corps du message
          content:
            json:
              schema:
                type: array
                description: Classement des utilisateurs
                items: 
                  $ref: '#/components/schemas/userStats'
        '400':
          description: "Requête invalide : l'un des champs est incorrect"
        

  /ranking/{stat}:
    get:
      tags:
        - Classement
      summary: Récupère le classement des utilisateurs en fonction d'une statistique particulière
      description: Récupère le classement des utilisateurs en fonction d'une statistique particulière
      parameters:
        - in: path
          name: stat
          schema:
            type: string
          required: true
          description: Statistique sur laquelle doit être basée le classement
        - in: query
          name: offset
          schema:
            type: number
            minimum: 1
          required: false
          description: Rang du premier utilisateur du classement
        - in: query
          name: limit
          schema:
            type: number
            minimum: 1
          required: false
          description: Taille du classement
      responses:
        '200':
          description: Le classement a été récupéré et est transmis dans le corps du message
          content:
            json:
              schema:
                type: array
                description: Classement des utilisateurs
                items: 
                  $ref: '#/components/schemas/userStats'
        '400':
          description: "Requête invalide : l'un des champs est incorrect"

components:
  schemas:
    userStats:
      type: object
      properties:
        username:
          type: string
          example: 'johndoe'
        nbKills:
          type: number
          minimum: 0
          example: 1021
        nbAsteroids:
          type: number
          minimum: 0
          example: 39281
        nbPoints:
          type: number
          minimum: 0
          example: 2921213
        nbDeaths:
          type: number
          minimum: 0
          example: 2012
        nbPowerUps:
          type: number
          minimum: 0
          example: 821
        nbGames:
          type: number
          minimum: 0
          example: 210
        nbWins:
          type: number
          minimum: 0
          example: 102
        maxKills:
          type: number
          minimum: 0
          example: 13
        maxPoints:
          type: number
          minimum: 0
          example: 768
        maxPowerUps:
          type: number
          minimum: 0
          example: 11
        maxDeaths:
          type: number
          minimum: 0
          example: 23
